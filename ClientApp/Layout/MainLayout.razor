@inherits LayoutComponentBase

<FluentLayout Class="h-[100vh]">
    <FluentHeader>
        EMS
        <FluentSpacer></FluentSpacer>
        <AuthorizeView>
            <Authorized>
                <FluentProfileMenu 
                    Initials="EG"
                    HeaderLabel="Profile"
                    ImageSize="40px"
                    FullName="@context.User.Identity?.Name"
                    PopoverStyle="margin-top:10px; min-width: 400px; border-radius: 5px;"
                    OnHeaderButtonClick="LogoutClicked"
                >
                </FluentProfileMenu>
            </Authorized>
            <NotAuthorized>
                <div>
                    <FluentButton Appearance="Appearance.Outline" OnClick="HandleLoginClicked">Login/Register</FluentButton>
                </div>
            </NotAuthorized>
        </AuthorizeView>
    </FluentHeader>
    <FluentStack Class="h-full" Style="background: var(--neutral-layer-1)" Orientation="Orientation.Horizontal" Width="100%">
        <NavMenu/>
        <FluentBodyContent Class="flex h-full">
            <ErrorBoundary>
                <ChildContent>
                    <div class="w-full p-4">
                        @Body
                    </div>
                </ChildContent>
                <ErrorContent Context="ex">
                    <div class="blazor-error-boundary">@ex.Message</div>
                </ErrorContent>
            </ErrorBoundary>
        </FluentBodyContent>
    </FluentStack>
</FluentLayout>

<FluentTooltipProvider />
<FluentDialogProvider/>

@code
{
    //Check if menu is open
    private bool _open = false;
    
    async Task LogoutClicked()
    {
        var logoutModel = new UserSession();
        var customAuthStateProvider = (CustomAuthStateProvider)AuthStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(logoutModel);
        NavManager.NavigateTo("/", forceLoad: true);
    }

    void HandleLoginClicked()
    {
        NavManager.NavigateTo("/identity/account/login");
    }
}
